/*
 * CDR Energy API
 *
 * Consumer Data Right end points and payloads for the Energy sector
 *
 * API version: 1.30.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package impl

import (
	"github.com/gin-gonic/gin"
	"net/http"
	"runtime"
)

type DefaultAPI struct{}

func (DefaultAPI) GetAccount(c *gin.Context) {
	returnValue(c, getCurrentFunctionName())
}

func (DefaultAPI) GetBalanceForAccount(c *gin.Context) {
	returnValue(c, getCurrentFunctionName())
}

func (DefaultAPI) GetBillingForAccount(c *gin.Context) {
	//TODO implement me
	returnValue(c, getCurrentFunctionName())
}

func (DefaultAPI) GetConcessions(c *gin.Context) {
	//TODO implement me
	returnValue(c, getCurrentFunctionName())
}

func (DefaultAPI) GetDERForServicePoint(c *gin.Context) {
	//TODO implement me
	returnValue(c, getCurrentFunctionName())
}

func (DefaultAPI) GetInvoicesForAccount(c *gin.Context) {
	//TODO implement me
	returnValue(c, getCurrentFunctionName())
}

func (DefaultAPI) GetPaymentSchedule(c *gin.Context) {
	//TODO implement me
	returnValue(c, getCurrentFunctionName())
}

func (DefaultAPI) GetPlan(c *gin.Context) {
	//TODO implement me
	returnValue(c, getCurrentFunctionName())
}

func (DefaultAPI) GetServicePoint(c *gin.Context) {
	//TODO implement me
	returnValue(c, getCurrentFunctionName())
}

func (DefaultAPI) GetUsageForServicePoint(c *gin.Context) {
	//TODO implement me
	returnValue(c, getCurrentFunctionName())
}

func (DefaultAPI) ListAccounts(c *gin.Context) {
	//TODO implement me
	returnValue(c, getCurrentFunctionName())
}

func (DefaultAPI) ListBalancesBulk(c *gin.Context) {
	returnValue(c, getCurrentFunctionName())
}

func (DefaultAPI) ListBalancesForAccounts(c *gin.Context) {
	//TODO implement me
	returnValue(c, getCurrentFunctionName())
}

func (DefaultAPI) ListBillingBulk(c *gin.Context) {
	//TODO implement me
	returnValue(c, getCurrentFunctionName())
}

func (DefaultAPI) ListBillingForAccounts(c *gin.Context) {
	//TODO implement me
	returnValue(c, getCurrentFunctionName())
}

func (DefaultAPI) ListDERBulk(c *gin.Context) {
	//TODO implement me
	returnValue(c, getCurrentFunctionName())
}

func (DefaultAPI) ListDERForServicePoints(c *gin.Context) {
	//TODO implement me
	returnValue(c, getCurrentFunctionName())
}

func (DefaultAPI) ListInvoicesBulk(c *gin.Context) {
	//TODO implement me
	returnValue(c, getCurrentFunctionName())
}

func (DefaultAPI) ListInvoicesForAccounts(c *gin.Context) {
	//TODO implement me
	returnValue(c, getCurrentFunctionName())
}

func (DefaultAPI) ListPlans(c *gin.Context) {
	//TODO implement me
	returnValue(c, getCurrentFunctionName())
}

func (DefaultAPI) ListServicePoints(c *gin.Context) {
	//TODO implement me
	returnValue(c, getCurrentFunctionName())
}

func (DefaultAPI) ListUsageBulk(c *gin.Context) {
	//TODO implement me
	returnValue(c, getCurrentFunctionName())
}

func (DefaultAPI) ListUsageForServicePoints(c *gin.Context) {
	//TODO implement me
	functionName := getCurrentFunctionName()
	c.JSON(http.StatusOK, gin.H{"message": functionName})
}

func getCurrentFunctionName() string {
	pc, _, _, _ := runtime.Caller(1)
	return runtime.FuncForPC(pc).Name()
}

func returnValue(c *gin.Context, functionName string) {
	c.String(http.StatusOK, functionName)
}
