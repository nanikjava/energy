// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * CDR Energy API
 *
 * Consumer Data Right end points and payloads for the Energy sector
 *
 * API version: 1.30.0
 */

package energyserver




// EnergyAccountDetailV4AllOfPlanDetail - Detail on the plan applicable to this account. Mandatory if openStatus is OPEN
type EnergyAccountDetailV4AllOfPlanDetail struct {

	// The fuel types covered by the plan
	FuelType string `json:"fuelType"`

	// Flag that indicates that the plan is contingent on the customer taking up an alternate fuel plan from the same retailer (for instance, if the fuelType is ELECTRICITY then a GAS plan from the same retailer must be taken up). Has no meaning if the plan has a fuelType of DUAL. If absent the value is assumed to be false
	IsContingentPlan bool `json:"isContingentPlan,omitempty"`

	// Charges for metering included in the plan
	MeteringCharges []EnergyPlanDetailV3AllOfMeteringCharges `json:"meteringCharges,omitempty"`

	GasContract EnergyPlanContractV3 `json:"gasContract,omitempty"`

	ElectricityContract EnergyPlanContractV3 `json:"electricityContract,omitempty"`
}

// AssertEnergyAccountDetailV4AllOfPlanDetailRequired checks if the required fields are not zero-ed
func AssertEnergyAccountDetailV4AllOfPlanDetailRequired(obj EnergyAccountDetailV4AllOfPlanDetail) error {
	elements := map[string]interface{}{
		"fuelType": obj.FuelType,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.MeteringCharges {
		if err := AssertEnergyPlanDetailV3AllOfMeteringChargesRequired(el); err != nil {
			return err
		}
	}
	if err := AssertEnergyPlanContractV3Required(obj.GasContract); err != nil {
		return err
	}
	if err := AssertEnergyPlanContractV3Required(obj.ElectricityContract); err != nil {
		return err
	}
	return nil
}

// AssertEnergyAccountDetailV4AllOfPlanDetailConstraints checks if the values respects the defined constraints
func AssertEnergyAccountDetailV4AllOfPlanDetailConstraints(obj EnergyAccountDetailV4AllOfPlanDetail) error {
	return nil
}
