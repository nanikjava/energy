// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * CDR Energy API
 *
 * Consumer Data Right end points and payloads for the Energy sector
 *
 * API version: 1.30.0
 */

package energyserver




type EnergyAccountDetailV4AllOfPlans struct {

	// Optional display name for the plan provided by the customer to help differentiate multiple plans
	Nickname string `json:"nickname,omitempty"`

	// An array of servicePointIds, representing NMIs, that this account is linked to
	ServicePointIds []string `json:"servicePointIds"`

	PlanOverview EnergyAccountV2AllOfPlanOverview `json:"planOverview,omitempty"`

	PlanDetail EnergyAccountDetailV4AllOfPlanDetail `json:"planDetail,omitempty"`

	// An array of additional contacts that are authorised to act on this account
	AuthorisedContacts []EnergyAccountDetailV4AllOfAuthorisedContacts `json:"authorisedContacts,omitempty"`
}

// AssertEnergyAccountDetailV4AllOfPlansRequired checks if the required fields are not zero-ed
func AssertEnergyAccountDetailV4AllOfPlansRequired(obj EnergyAccountDetailV4AllOfPlans) error {
	elements := map[string]interface{}{
		"servicePointIds": obj.ServicePointIds,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertEnergyAccountV2AllOfPlanOverviewRequired(obj.PlanOverview); err != nil {
		return err
	}
	if err := AssertEnergyAccountDetailV4AllOfPlanDetailRequired(obj.PlanDetail); err != nil {
		return err
	}
	for _, el := range obj.AuthorisedContacts {
		if err := AssertEnergyAccountDetailV4AllOfAuthorisedContactsRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertEnergyAccountDetailV4AllOfPlansConstraints checks if the values respects the defined constraints
func AssertEnergyAccountDetailV4AllOfPlansConstraints(obj EnergyAccountDetailV4AllOfPlans) error {
	return nil
}
