// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * CDR Energy API
 *
 * Consumer Data Right end points and payloads for the Energy sector
 *
 * API version: 1.30.0
 */

package energyserver




type EnergyPlanControlledLoadV2InnerSingleRateRatesInner struct {

	// Unit price of usage per  measure unit (exclusive of GST)
	UnitPrice string `json:"unitPrice"`

	// The measurement unit of rate. Assumed to be KWH if absent
	MeasureUnit string `json:"measureUnit,omitempty"`

	// Volume in kWh that this rate applies to.  Only applicable for ‘stepped’ rates where different rates apply for different volumes of usage in a period
	Volume float32 `json:"volume,omitempty"`
}

// AssertEnergyPlanControlledLoadV2InnerSingleRateRatesInnerRequired checks if the required fields are not zero-ed
func AssertEnergyPlanControlledLoadV2InnerSingleRateRatesInnerRequired(obj EnergyPlanControlledLoadV2InnerSingleRateRatesInner) error {
	elements := map[string]interface{}{
		"unitPrice": obj.UnitPrice,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertEnergyPlanControlledLoadV2InnerSingleRateRatesInnerConstraints checks if the values respects the defined constraints
func AssertEnergyPlanControlledLoadV2InnerSingleRateRatesInnerConstraints(obj EnergyPlanControlledLoadV2InnerSingleRateRatesInner) error {
	return nil
}
