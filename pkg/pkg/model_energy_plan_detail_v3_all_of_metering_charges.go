// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * CDR Energy API
 *
 * Consumer Data Right end points and payloads for the Energy sector
 *
 * API version: 1.30.0
 */

package energyserver




type EnergyPlanDetailV3AllOfMeteringCharges struct {

	// Display name of the charge
	DisplayName string `json:"displayName"`

	// Description of the charge
	Description string `json:"description,omitempty"`

	// Minimum value of the charge if the charge is a range or the absolute value of the charge if no range is specified
	MinimumValue string `json:"minimumValue"`

	// The upper limit of the charge if the charge could occur in a range
	MaximumValue string `json:"maximumValue,omitempty"`

	// The charges that occur on a schedule indicates the frequency. Formatted according to [ISO 8601 Durations](https://en.wikipedia.org/wiki/ISO_8601#Durations) (excludes recurrence syntax)
	Period string `json:"period,omitempty"`
}

// AssertEnergyPlanDetailV3AllOfMeteringChargesRequired checks if the required fields are not zero-ed
func AssertEnergyPlanDetailV3AllOfMeteringChargesRequired(obj EnergyPlanDetailV3AllOfMeteringCharges) error {
	elements := map[string]interface{}{
		"displayName": obj.DisplayName,
		"minimumValue": obj.MinimumValue,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertEnergyPlanDetailV3AllOfMeteringChargesConstraints checks if the values respects the defined constraints
func AssertEnergyPlanDetailV3AllOfMeteringChargesConstraints(obj EnergyPlanDetailV3AllOfMeteringCharges) error {
	return nil
}
