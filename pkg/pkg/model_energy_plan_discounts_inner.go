// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * CDR Energy API
 *
 * Consumer Data Right end points and payloads for the Energy sector
 *
 * API version: 1.30.0
 */

package energyserver




type EnergyPlanDiscountsInner struct {

	// The display name of the discount
	DisplayName string `json:"displayName"`

	// The description of the discount
	Description string `json:"description,omitempty"`

	// The type of the discount
	Type string `json:"type"`

	// The type of the discount.  Mandatory if the discount type is CONDITIONAL
	Category string `json:"category,omitempty"`

	// Optional end date for the discount after which the discount is no longer available
	EndDate string `json:"endDate,omitempty"`

	// The method of calculation of the discount
	MethodUType string `json:"methodUType"`

	PercentOfBill EnergyPlanDiscountsInnerPercentOfBill `json:"percentOfBill,omitempty"`

	PercentOfUse EnergyPlanDiscountsInnerPercentOfUse `json:"percentOfUse,omitempty"`

	FixedAmount EnergyPlanDiscountsInnerFixedAmount `json:"fixedAmount,omitempty"`

	PercentOverThreshold EnergyPlanDiscountsInnerPercentOverThreshold `json:"percentOverThreshold,omitempty"`
}

// AssertEnergyPlanDiscountsInnerRequired checks if the required fields are not zero-ed
func AssertEnergyPlanDiscountsInnerRequired(obj EnergyPlanDiscountsInner) error {
	elements := map[string]interface{}{
		"displayName": obj.DisplayName,
		"type": obj.Type,
		"methodUType": obj.MethodUType,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertEnergyPlanDiscountsInnerPercentOfBillRequired(obj.PercentOfBill); err != nil {
		return err
	}
	if err := AssertEnergyPlanDiscountsInnerPercentOfUseRequired(obj.PercentOfUse); err != nil {
		return err
	}
	if err := AssertEnergyPlanDiscountsInnerFixedAmountRequired(obj.FixedAmount); err != nil {
		return err
	}
	if err := AssertEnergyPlanDiscountsInnerPercentOverThresholdRequired(obj.PercentOverThreshold); err != nil {
		return err
	}
	return nil
}

// AssertEnergyPlanDiscountsInnerConstraints checks if the values respects the defined constraints
func AssertEnergyPlanDiscountsInnerConstraints(obj EnergyPlanDiscountsInner) error {
	return nil
}
