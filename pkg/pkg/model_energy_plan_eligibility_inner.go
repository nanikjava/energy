// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * CDR Energy API
 *
 * Consumer Data Right end points and payloads for the Energy sector
 *
 * API version: 1.30.0
 */

package energyserver




type EnergyPlanEligibilityInner struct {

	// The type of the eligibility restriction.<br/>The CONTINGENT_PLAN value indicates that the plan is contingent on the customer taking up an alternate fuel plan from the same retailer (for instance, if the fuelType is ELECTRICITY then a GAS plan from the same retailer must be taken up)
	Type string `json:"type"`

	// Information of the eligibility restriction specific to the type of the restriction
	Information string `json:"information"`

	// A description of the eligibility restriction
	Description string `json:"description,omitempty"`
}

// AssertEnergyPlanEligibilityInnerRequired checks if the required fields are not zero-ed
func AssertEnergyPlanEligibilityInnerRequired(obj EnergyPlanEligibilityInner) error {
	elements := map[string]interface{}{
		"type": obj.Type,
		"information": obj.Information,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertEnergyPlanEligibilityInnerConstraints checks if the values respects the defined constraints
func AssertEnergyPlanEligibilityInnerConstraints(obj EnergyPlanEligibilityInner) error {
	return nil
}
