// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * CDR Energy API
 *
 * Consumer Data Right end points and payloads for the Energy sector
 *
 * API version: 1.30.0
 */

package energyserver




type EnergyPlanGreenPowerChargesInner struct {

	// The display name of the charge
	DisplayName string `json:"displayName"`

	// The description of the charge
	Description string `json:"description,omitempty"`

	// The applicable green power scheme
	Scheme string `json:"scheme"`

	// The type of charge
	Type string `json:"type"`

	// Array of charge tiers based on the percentage of green power used for the period implied by the type.  Array is in order of increasing percentage of green power
	Tiers []EnergyPlanGreenPowerChargesInnerTiersInner `json:"tiers"`
}

// AssertEnergyPlanGreenPowerChargesInnerRequired checks if the required fields are not zero-ed
func AssertEnergyPlanGreenPowerChargesInnerRequired(obj EnergyPlanGreenPowerChargesInner) error {
	elements := map[string]interface{}{
		"displayName": obj.DisplayName,
		"scheme": obj.Scheme,
		"type": obj.Type,
		"tiers": obj.Tiers,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.Tiers {
		if err := AssertEnergyPlanGreenPowerChargesInnerTiersInnerRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertEnergyPlanGreenPowerChargesInnerConstraints checks if the values respects the defined constraints
func AssertEnergyPlanGreenPowerChargesInnerConstraints(obj EnergyPlanGreenPowerChargesInner) error {
	return nil
}
