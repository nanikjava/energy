// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * CDR Energy API
 *
 * Consumer Data Right end points and payloads for the Energy sector
 *
 * API version: 1.30.0
 */

package energyserver




type EnergyPlanSolarFeedInTariffV3Inner struct {

	// The name of the tariff
	DisplayName string `json:"displayName"`

	// A description of the tariff
	Description string `json:"description,omitempty"`

	// The start date of the application of the feed in tariff
	StartDate string `json:"startDate,omitempty"`

	// The end date of the application of the feed in tariff
	EndDate string `json:"endDate,omitempty"`

	// The applicable scheme
	Scheme string `json:"scheme"`

	// The type of the payer
	PayerType string `json:"payerType"`

	// The type of the payer
	TariffUType string `json:"tariffUType"`

	SingleTariff EnergyPlanSolarFeedInTariffV3InnerSingleTariff `json:"singleTariff,omitempty"`

	// Represents a tariff based on time.  Mandatory if tariffUType is set to timeVaryingTariffs
	TimeVaryingTariffs []EnergyPlanSolarFeedInTariffV3InnerTimeVaryingTariffsInner `json:"timeVaryingTariffs,omitempty"`
}

// AssertEnergyPlanSolarFeedInTariffV3InnerRequired checks if the required fields are not zero-ed
func AssertEnergyPlanSolarFeedInTariffV3InnerRequired(obj EnergyPlanSolarFeedInTariffV3Inner) error {
	elements := map[string]interface{}{
		"displayName": obj.DisplayName,
		"scheme": obj.Scheme,
		"payerType": obj.PayerType,
		"tariffUType": obj.TariffUType,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertEnergyPlanSolarFeedInTariffV3InnerSingleTariffRequired(obj.SingleTariff); err != nil {
		return err
	}
	for _, el := range obj.TimeVaryingTariffs {
		if err := AssertEnergyPlanSolarFeedInTariffV3InnerTimeVaryingTariffsInnerRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertEnergyPlanSolarFeedInTariffV3InnerConstraints checks if the values respects the defined constraints
func AssertEnergyPlanSolarFeedInTariffV3InnerConstraints(obj EnergyPlanSolarFeedInTariffV3Inner) error {
	return nil
}
