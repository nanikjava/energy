// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * CDR Energy API
 *
 * Consumer Data Right end points and payloads for the Energy sector
 *
 * API version: 1.30.0
 */

package energyserver




type EnergyPlanTariffPeriodV2InnerTimeOfUseRatesInnerTimeOfUseInner struct {

	// The days that the rate applies to
	Days []string `json:"days"`

	// Start of the period.  Formatted according to [ISO 8601 Times](https://en.wikipedia.org/wiki/ISO_8601#Times). If the time is provided without a UTC offset, the time zone will be determined by the value of EnergyPlanContract.timeZone.
	StartTime string `json:"startTime"`

	// End of the period.  Formatted according to [ISO 8601 Times](https://en.wikipedia.org/wiki/ISO_8601#Times). If the time is provided without a UTC offset, the time zone will be determined by the value of EnergyPlanContract.timeZone.
	EndTime string `json:"endTime"`
}

// AssertEnergyPlanTariffPeriodV2InnerTimeOfUseRatesInnerTimeOfUseInnerRequired checks if the required fields are not zero-ed
func AssertEnergyPlanTariffPeriodV2InnerTimeOfUseRatesInnerTimeOfUseInnerRequired(obj EnergyPlanTariffPeriodV2InnerTimeOfUseRatesInnerTimeOfUseInner) error {
	elements := map[string]interface{}{
		"days": obj.Days,
		"startTime": obj.StartTime,
		"endTime": obj.EndTime,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertEnergyPlanTariffPeriodV2InnerTimeOfUseRatesInnerTimeOfUseInnerConstraints checks if the values respects the defined constraints
func AssertEnergyPlanTariffPeriodV2InnerTimeOfUseRatesInnerTimeOfUseInnerConstraints(obj EnergyPlanTariffPeriodV2InnerTimeOfUseRatesInnerTimeOfUseInner) error {
	return nil
}
