// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * CDR Energy API
 *
 * Consumer Data Right end points and payloads for the Energy sector
 *
 * API version: 1.30.0
 */

package energyserver




type EnergyServicePointDetailMeters struct {

	// The meter ID uniquely identifies a meter for a given service point.  It is unique in the context of the service point.  It is not globally unique
	MeterId string `json:"meterId"`

	Specifications EnergyServicePointDetailSpecifications `json:"specifications"`

	// Usage data registers available from the meter. This may be empty where there are no meters physically installed at the service point
	Registers []EnergyServicePointDetailRegisters `json:"registers,omitempty"`
}

// AssertEnergyServicePointDetailMetersRequired checks if the required fields are not zero-ed
func AssertEnergyServicePointDetailMetersRequired(obj EnergyServicePointDetailMeters) error {
	elements := map[string]interface{}{
		"meterId": obj.MeterId,
		"specifications": obj.Specifications,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertEnergyServicePointDetailSpecificationsRequired(obj.Specifications); err != nil {
		return err
	}
	for _, el := range obj.Registers {
		if err := AssertEnergyServicePointDetailRegistersRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertEnergyServicePointDetailMetersConstraints checks if the values respects the defined constraints
func AssertEnergyServicePointDetailMetersConstraints(obj EnergyServicePointDetailMeters) error {
	return nil
}
