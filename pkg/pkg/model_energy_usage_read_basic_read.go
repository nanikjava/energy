// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * CDR Energy API
 *
 * Consumer Data Right end points and payloads for the Energy sector
 *
 * API version: 1.30.0
 */

package energyserver




// EnergyUsageReadBasicRead - Mandatory if readUType is set to basicRead
type EnergyUsageReadBasicRead struct {

	// The quality of the read taken.  If absent then assumed to be ACTUAL
	Quality string `json:"quality,omitempty"`

	// Meter read value.  If positive then it means consumption, if negative it means export
	Value float32 `json:"value"`
}

// AssertEnergyUsageReadBasicReadRequired checks if the required fields are not zero-ed
func AssertEnergyUsageReadBasicReadRequired(obj EnergyUsageReadBasicRead) error {
	elements := map[string]interface{}{
		"value": obj.Value,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertEnergyUsageReadBasicReadConstraints checks if the values respects the defined constraints
func AssertEnergyUsageReadBasicReadConstraints(obj EnergyUsageReadBasicRead) error {
	return nil
}
